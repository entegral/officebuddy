package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"

	"github.com/entegral/gobox/dynamo"
	"github.com/entegral/officebuddy/types"
)

// PutInvite is the resolver for the putInvite field.
func (r *mutationResolver) PutInvite(ctx context.Context, userEmail string, eventGUID string, status types.InviteStatus) (*types.Invite, error) {
	invite := &types.Invite{
		Status: status,
	}
	event := types.Event{GUID: eventGUID, CreatedByEmail: userEmail}
	user := types.User{Email: userEmail}
	isValid, err := invite.CheckLink(ctx, invite, &event, &user)
	if isValid {
		return invite, invite.Put(ctx, invite)
	}
	return nil, err
}

// DeleteInvite is the resolver for the deleteInvite field.
func (r *mutationResolver) DeleteInvite(ctx context.Context, userEmail string, eventGUID string) (*types.Invite, error) {
	invite := &types.Invite{
		DiLink: *dynamo.NewDiLink(&types.Event{GUID: eventGUID, CreatedByEmail: userEmail}, &types.User{Email: userEmail}),
	}
	return nil, invite.Delete(ctx, invite)

}
