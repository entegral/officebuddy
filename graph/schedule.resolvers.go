package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/entegral/officebuddy/types"
)

// GetOfficeSchedules is the resolver for the getOfficeSchedules field.
func (r *queryResolver) GetOfficeSchedules(ctx context.Context, officeGUID string) ([]*types.Schedule, error) {
	panic(fmt.Errorf("not implemented: GetOfficeSchedules - getOfficeSchedules"))
}

// Start is the resolver for the start field.
func (r *scheduleResolver) Start(ctx context.Context, obj *types.Schedule) (string, error) {
	panic(fmt.Errorf("not implemented: Start - start"))
}

// End is the resolver for the end field.
func (r *scheduleResolver) End(ctx context.Context, obj *types.Schedule) (string, error) {
	panic(fmt.Errorf("not implemented: End - end"))
}

// Offices is the resolver for the offices field.
func (r *scheduleResolver) Offices(ctx context.Context, obj *types.Schedule) ([]*types.Office, error) {
	panic(fmt.Errorf("not implemented: Offices - offices"))
}

// Schedule returns ScheduleResolver implementation.
func (r *Resolver) Schedule() ScheduleResolver { return &scheduleResolver{r} }

type scheduleResolver struct{ *Resolver }
