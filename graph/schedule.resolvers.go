package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/entegral/officebuddy/types"
)

// GetOfficeSchedule is the resolver for the getOfficeSchedule field.
func (r *queryResolver) GetOfficeSchedule(ctx context.Context, officeGUID string) ([]*types.Schedule, error) {
	return []*types.Schedule{
		{
			DayNumber: 1,
			Day:       types.DayOfWeekFri,
			Active:    true,
			Coworkers: []*types.User{
				{
					GUID:      "1234",
					FirstName: "John",
					LastName:  "Doe",
					Email:     "123@gmail.com",
				},
				{
					GUID:      "5678",
					FirstName: "Jane",
					LastName:  "Doe",
					Email:     "234@gmail.com",
				},
			},
		},
	}, nil
}

// Offices is the resolver for the offices field.
func (r *scheduleResolver) Offices(ctx context.Context, obj *types.Schedule) ([]*types.Office, error) {
	panic(fmt.Errorf("not implemented: Offices - offices"))
}

// Schedule returns ScheduleResolver implementation.
func (r *Resolver) Schedule() ScheduleResolver { return &scheduleResolver{r} }

type scheduleResolver struct{ *Resolver }
