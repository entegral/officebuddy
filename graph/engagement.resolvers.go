package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"

	"github.com/entegral/gobox/dynamo"
	"github.com/entegral/officebuddy/types"
)

// PutEngagement is the resolver for the putEngagement field.
func (r *mutationResolver) PutEngagement(ctx context.Context, user types.UserFinder, officeGUID string, eventGUID string) (*types.Engagement, error) {
	engagement := &types.Engagement{}
	_, err := engagement.CheckLink(
		ctx,
		engagement,
		&user.User,
		&types.Office{GUID: officeGUID},
		&types.Event{GUID: eventGUID},
	)
	switch err.(type) {
	case nil:
		return engagement, nil
	case dynamo.ErrLinkNotFound:
		return engagement, engagement.Put(ctx, engagement)
	default:
		return nil, err
	}
}

// Engagement is the resolver for the engagement field.
func (r *queryResolver) Engagement(ctx context.Context, user types.UserFinder, officeGUID string, eventGUID string) (*types.Engagement, error) {
	engagement := &types.Engagement{}
	loaded, err := engagement.CheckLink(
		ctx,
		engagement,
		&user.User,
		&types.Office{GUID: officeGUID},
		&types.Event{GUID: eventGUID},
	)
	if err != nil {
		return nil, err
	}
	if !loaded {
		return nil, nil
	}
	return engagement, nil
}
